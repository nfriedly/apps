name: CI Build
on: [push, pull_request]

jobs:
#   # compiling fails
#   dingux-cap32:
#     name: Build dingux-cap32
#     runs-on: ubuntu-20.04
#     container:
#       image: nfriedly/miyoo-toolchain:latest
#     env:
#       APP: dingux-cap32
#     steps:
#     - uses: actions/checkout@v2
#     - name: checkout submodule
#       run: git submodule update --init $APP
#     - name: build
#       run: cd $APP && make -f Makefile.miyoo
#     - uses: actions/upload-artifact@v2
#       with:
#         name: $APP
#         path: dingux-cap32/dingux-cap32
#         if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

#   # todo: fuse-od
#   # todo: gambatte
#   # todo: j2me
  
#   # temporarily disabled
#   msx:
#     name: Build msx
#     runs-on: ubuntu-20.04
#     container:
#       image: nfriedly/miyoo-toolchain:latest
#     env:
#       APP: msx
#     steps:
#     - uses: actions/checkout@v2
#     - name: checkout submodule
#       run: git submodule update --init $APP
#     # todo: just make this a part of the image if it works
#     - name: tweak toolchain location
#       run: mkdir -p /opt/buildroot-bittboy/output/ && ln -s /opt/miyoo /opt/buildroot-bittboy/output/host
#     - name: build
#       run: cd $APP && make
#     - uses: actions/upload-artifact@v2
#       with:
#         name: ${{ env.APP }}
#         path: ${{ env.APP }}/bittboy-msx/bittboy-msx
#         if-no-files-found: error

#   # compiling fails due to unknown flags 
#   pocketsnes:
#     name: Build pocketsnes
#     runs-on: ubuntu-20.04
#     container:
#       image: nfriedly/miyoo-toolchain:latest
#     env:
#       APP: pocketsnes
#     steps:
#     - uses: actions/checkout@v2
#     - name: checkout submodule
#       run: git submodule update --init $APP
#     - name: build
#       run: cd $APP && make
#     - uses: actions/upload-artifact@v2
#       with:
#         name: ${{ env.APP }}
#         path: ${{ env.APP }}/dist/PocketSNES.dge
#         if-no-files-found: error

  # ./configure thinks its missing the c compiler
  retroarch:
    name: Build retroarch
    runs-on: ubuntu-20.04
    container:
      image: nfriedly/miyoo-toolchain:latest
    env:
      APP: retroarch
      # override a few paths that default to uclibc
      GCW0_SDL_CONFIG: /opt/miyoo/arm-buildroot-linux-musleabi/sysroot/usr/bin/sdl-config
      GCW0_FREETYPE_CONFIG: /opt/miyoo/arm-buildroot-linux-musleabi/sysroot/usr/bin/freetype-config
      GCW0_INC_DIR: /opt/miyoo/arm-buildroot-linux-musleabi/sysroot/usr/include
      GCW0_LIB_DIR: /opt/miyoo/arm-buildroot-linux-musleabi/sysroot/usr/lib
    steps:
    - uses: actions/checkout@v2
    - name: checkout submodule
      run: git submodule update --init $APP
    - name: build
      run: cd $APP && ./configure --host=$CROSS_TRIPLE && make
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.APP }}
        path: ${{ env.APP }}/retroarch
        if-no-files-found: error
